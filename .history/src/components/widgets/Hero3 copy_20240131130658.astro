---
import Image from '~/components/common/Image.astro';
import type { CallToAction } from '~/types';
import Button from '~/components/ui/Button.astro';

export interface Props {
  title?: string;
  subtitle?: string;
  tagline?: string;
  content?: string;
  actions?: string | CallToAction[];
  image?: string | any; // TODO: find HTMLElementProps
}

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  tagline,
  content = await Astro.slots.render('content'),
  actions = await Astro.slots.render('actions'),
  image = await Astro.slots.render('image'),
} = Astro.props;
---

 
 {
  image && (
    <div class="">
      {typeof image === 'string' ? (
        <Fragment set:html={image} />
      ) : (
        <Image
          class="absolute top-0 left-0 min-h-full ob"
          
          {...image}
        />
      )}
    </div>
  )
}
{
  tagline && (
    <span
      class="text-base text-secondary dark:text-blue-200 font-bold tracking-wide uppercase"
      set:html={tagline}
    />
  )
}
{
  title && (
    <h1
      class="text-5xl md:text-6xl font-bold leading-tighter tracking-tighter mb-4 font-heading dark:text-gray-200"
      set:html={title}
    />
  )
}
{
  subtitle && <p class="text-xl text-muted mb-6 dark:text-slate-300" set:html={subtitle} />
  }

{
  actions && (
    <div class="max-w-xs sm:max-w-md m-auto flex flex-nowrap flex-col sm:flex-row sm:justify-center gap-4 lg:justify-start lg:m-0 lg:max-w-7xl">
      {Array.isArray(actions) ? (
        actions.map((action) => (
          <div class="flex w-full sm:w-auto">
            <Button {...(action || {})} class="w-full sm:mb-0" />
          </div>
        ))
      ) : (
        <Fragment set:html={actions} />
      )}
    </div>
  )
}
{content && <Fragment set:html={content} />}
